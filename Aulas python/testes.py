import time
import os

# FunÃ§Ã£o para limpar a tela
def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')

# ASCII do foguete com fogo
foguete_fogo = r"""
       /\
      /  \
     / || \
    /  ||  \
   /   ||   \
  |    ||    |
  |    ||    |
  |    ||    |
  |    ||    |
 /|    ||    |\
/_|____||____|_\
   (        )
    (      )
     (____)
     |    |
     |    |
     |ðŸ”¥ðŸ”¥|
    /|ðŸ”¥ðŸ”¥|\
   /_|ðŸ”¥ðŸ”¥|_\
     /_/\
"""

# ASCII do foguete sem fogo (em voo ou descida)
foguete_voo = r"""
       /\
      /  \
     / || \
    /  ||  \
   /   ||   \
  |    ||    |
  |    ||    |
  |    ||    |
  |    ||    |
 /|    ||    |\
/_|____||____|_\
   (        )
    (      )
     (____)
     |    |
     |    |
     |    |
    /|    |\
   /_|____|_\
     /_/\
"""

# ASCII da explosÃ£o
explosao = r"""
        _.-^^---....,,--
    _--                  --_
   <                        >)
   |      BOOOOM!!!        |
   \._                   _./
      '''--. . , ; .--'''
            | |   |
         .-=||  | |=-.
         `-=#$%&%$#=-'
            | ;  :|
   _____.,-#%&$@%#&#~,._____
"""

# Contagem regressiva
x = 10
while x >= 0:
    limpar_tela()
    print(f"Contagem regressiva: {x}")
    time.sleep(1)
    x -= 1

limpar_tela()
print("ðŸš€ LanÃ§amento do foguete autorizado!")
time.sleep(2)

# Simula a decolagem com fogo
for i in range(5):
    limpar_tela()
    print(foguete_fogo)
    print("\nFoguete decolando...\n")
    time.sleep(0.7)

# Foguete voando
for i in range(3):
    limpar_tela()
    print(foguete_voo)
    print("\nFoguete em voo...\n")
    time.sleep(0.7)

# ExplosÃ£o!
limpar_tela()
print(explosao)
print("\nðŸ’¥ O foguete explodiu no ar! MissÃ£o fracassada. ðŸ˜¢\n")
time.sleep(3)

# (Opcional) Pouso forÃ§ado depois da explosÃ£o (versÃ£o cÃ´mica)
limpar_tela()
print(foguete_voo)
print("\nðŸª‚ Parte do foguete caiu e estÃ¡ pousando de paraquedas...\n")
time.sleep(3)
print("ðŸ›¬ Pouso de emergÃªncia realizado com sucesso (pelo menos uma peÃ§a se salvou)!\n")

